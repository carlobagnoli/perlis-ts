export declare const mcomp: <A, B, C>(f: (b: B) => C, g: (a: A) => B) => (a: A) => C;
export declare const ccomp: <A, B, C>(f: (b: B) => C) => (g: (a: A) => B) => (a: A) => C;
export declare const comp: (...f: any[]) => any;
export declare const mpipe: <A, B, C>(f: (a: A) => B, g: (b: B) => C) => (a: A) => C;
export declare const cpipe: <A, B, C>(f: (a: A) => B) => (g: (b: B) => C) => (a: A) => C;
export declare const pipe: (...x: any[]) => any;
export declare const id: <T>(x: T) => T;
export declare const constant: <T>(x: T) => () => T;
export declare const call: <T>(f: () => T) => T;
export declare const scomb: <A, B, C>(f: (a: A, b: B) => C, g: (a: A) => B, x: A) => C;
export declare const cscomb: <A, B, C>(f: (a: A, b: B) => C) => (g: (a: A) => B) => (x: A) => C;
export declare const first: <T>(x: T[]) => T;
export declare const last: <T>(x: T[]) => T;
export declare const rest: <T>(x: T[]) => T[];
export declare const init: <T>(x: T[]) => T[];
export declare const foldl: <A, B>(x: A[], f: (a: A, b: B) => A, init: A) => any;
export declare const foldl1: <A, B>(x: A[], f: (a: A, b: B) => A) => any;
export declare const cfoldl: <A, B>(x: A[]) => (f: (a: A, b: B) => A) => (init: A) => any;
export declare const cfoldl1: <A, B>(x: A[]) => (f: (a: A, b: B) => A) => any;
export declare const foldr: <A, B>(x: A[], f: (a: A, b: B) => A, init: A) => any;
export declare const foldr1: <A, B>(x: A[], f: (a: A, b: B) => A) => any;
export declare const cfoldr: <A, B>(x: A[]) => (f: (a: A, b: B) => A) => (init: A) => any;
export declare const cfoldr1: <A, B>(x: A[]) => (f: (a: A, b: B) => A) => any;
